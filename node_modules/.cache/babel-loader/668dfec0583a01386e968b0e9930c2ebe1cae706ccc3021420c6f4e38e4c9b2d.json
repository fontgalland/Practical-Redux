{"ast":null,"code":"import { uiActions } from './ui-slice';\nimport { cartActions } from './cart-slice';\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://bookstore-3bad4-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not get cart data');\n      }\n      ;\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Failure!',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending...',\n      message: 'Sending cart data!'\n    })));\n    const sendRequest = async () => {\n      const response = await fetch('https://bookstore-3bad4-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed');\n      }\n      ;\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Failure!',\n        message: 'Sent cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","totalQuantity"],"sources":["C:/Users/Diego/Desktop/React Course/Practical-Redux/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from './ui-slice';\r\nimport { cartActions } from './cart-slice';\r\n\r\nexport const fetchCartData = () => {\r\n    return async (dispatch) => {\r\n        const fetchData = async () => {\r\n            const response = await fetch('https://bookstore-3bad4-default-rtdb.firebaseio.com/cart.json');\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Could not get cart data');\r\n            };\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        }\r\n\r\n        try {\r\n            const cartData = await fetchData();\r\n            dispatch(cartActions.replaceCart({items}));\r\n        } catch (error) {\r\n            dispatch(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Failure!',\r\n                message: 'Fetching cart data failed!'\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const sendCartData = (cart) => {\r\n    return async (dispatch) => {\r\n        dispatch(dispatch(uiActions.showNotification({\r\n            status: 'pending',\r\n            title: 'Sending...',\r\n            message: 'Sending cart data!'\r\n        }\r\n        ))\r\n        );\r\n        const sendRequest = async () => {\r\n            const response = await fetch('https://bookstore-3bad4-default-rtdb.firebaseio.com/cart.json',\r\n                { method: 'PUT', body: JSON.stringify({ items: cart.items, totalQuantity: cart.totalQuantity }), });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Sending cart data failed');\r\n            };\r\n        }\r\n        try {\r\n            await sendRequest();\r\n            dispatch(uiActions.showNotification({\r\n                status: 'success',\r\n                title: 'Success!',\r\n                message: 'Sent cart data successfully!'\r\n            }));\r\n        } catch {\r\n            dispatch(uiActions.showNotification({\r\n                status: 'error',\r\n                title: 'Failure!',\r\n                message: 'Sent cart data failed!'\r\n            }));\r\n        }\r\n\r\n    };\r\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AACtC,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACvB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+DAA+D,CAAC;MAE7F,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC9C;MAAC;MAED,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,OAAOD,IAAI;IACf,CAAC;IAED,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CAACF,WAAW,CAACW,WAAW,CAAC;QAACC;MAAK,CAAC,CAAC,CAAC;IAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZX,QAAQ,CAACH,SAAS,CAACe,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAO,MAAOjB,QAAQ,IAAK;IACvBA,QAAQ,CAACA,QAAQ,CAACH,SAAS,CAACe,gBAAgB,CAAC;MACzCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE;IACb,CACA,CAAC,CACD,CAAC;IACD,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,+DAA+D,EACxF;QAAEgB,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEZ,KAAK,EAAEO,IAAI,CAACP,KAAK;UAAEa,aAAa,EAAEN,IAAI,CAACM;QAAc,CAAC;MAAG,CAAC,CAAC;MAEvG,IAAI,CAACrB,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC/C;MAAC;IACL,CAAC;IACD,IAAI;MACA,MAAMa,WAAW,CAAC,CAAC;MACnBlB,QAAQ,CAACH,SAAS,CAACe,gBAAgB,CAAC;QAChCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,MAAM;MACJf,QAAQ,CAACH,SAAS,CAACe,gBAAgB,CAAC;QAChCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,UAAU;QACjBC,OAAO,EAAE;MACb,CAAC,CAAC,CAAC;IACP;EAEJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}